{
    "scopeName": "source.isg-cnc",
    "name": "VSCode ISG-CNC Syntax",
    "patterns": [
        {
            "include": "#linecomments"
        },
        {
            "include": "#inlinecomments"
        },
        {
            "include": "#blockcomments"
        },
        {
            "include": "#speedsfeeds"
        },
        {
            "include": "#prognames"
        },
        {
            "include": "#coords"
        },
        {
            "include": "#tools"
        },
        {
            "include": "#modifiers"
        },
        {
            "include": "#labels"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#gcodes"
        },
        {
            "include": "#mcodes"
        },
        {
            "include": "#dollarkeywords"
        },
        {
            "include": "#hashtagkeywords"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#programcalls"
        },
        {
            "include": "#common"
        },
        {
            "include": "#strings"
        }
    ],
    "repository": {
        "linecomments": {
            "name": "comment.line",
            "begin": ";",
            "end": "\n"
        },
        "inlinecomments": {
            "name": "comment.line",
            "begin": "\\(",
            "end": "\\)|\n"
        },
        "blockcomments": {
            "name": "comment.block",
            "begin": "^(N\\d{1,})?\\s*\\#COMMENT\\s*?*BEGIN",
            "end": "^(N\\d{1,})?\\s*\\#COMMENT\\s*?*END",
            "patterns": [
                {
                    "include": "#blockcomments"
                }
            ]
        },
        "gcodes": {
            "patterns": [
                {
                    "match": "\\b[Gg][0-9]{1,3}\\b",
                    "name": "keyword.command.gcode"
                }
            ]
        },
        "mcodes": {
            "patterns": [
                {
                    "match": "\\b[Mm][0-9]{1,3}\\b",
                    "name": "keyword.command.mcode"
                }
            ]
        },
        "dollarkeywords": {
            "patterns": [
                {
                    "match": "\\$BREAK",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$CONTINUE",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$DO",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$ENDDO",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$REPEAT",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$UNTIL",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$FOR",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$ENDFOR",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$GOTO",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$IF",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$ELSEIF",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$ENDIF",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$ELSE",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$SWITCH",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$CASE",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$DEFAULT",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$ENDSWITCH",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$WHILE",
                    "name": "keyword.control"
                },
                {
                    "match": "\\$ENDWHILE",
                    "name": "keyword.control"
                }
            ]
        },
        "hashtagkeywords": {
            "patterns": [
                {
                    "match": "\\#GANTRY\\s*?*((ON\\s*?*ALL)|ON\\s*?|(OFF\\s*?*ALL)|OFF\\s*?)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ACHSE",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ACHSTAUSCH",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ACS\\s*?*((DEF\\s*?*ACT)|DEF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ACS\\s*?*(ON|(OFF\\s*?*ALL)|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ADD",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#AKIMA\\s*?*(STARTVECTOR|ENDVECTOR|TRANS)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ANG",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#AX\\s*?*((DEF\\s*?*DEFAULT)|DEF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#AX\\s*?*(LINK\\s*?*(ON|OFF|ALL)|REQUEST|((RELEASE\\s*?*ALL)|(UNLOCK\\s*?*ALL)|RELEASE)|LOCK)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#BACKWARD\\s*?*STORAGE\\s*?*CLEAR",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#BLOCKSEARCH\\s*?*(LOCKED|RELEASED)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CACHE\\s*?*(CLEAR|LOAD)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CALL\\s*?*AX",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CAXTRACK\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#CAX\\s*?(OFF|ON|(\\[(-?(?:\\d+(?:\\.\\d*)?))\\])))|#CAX",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CHANNEL\\s*?*(INIT|SET|(INTERFACE\\s*?*(ON|OFF)))",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CHR",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CHF",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CLEAR\\s*?*CONFIG",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#COMMAND\\s*?*((WR\\s*?*SYN|WR)|(WAIT\\s*?*SYN|WAIT))",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#CONTOUR\\s*?*(MODE\\s*?*ON|MODE))",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CONTROL\\s*?*AREA\\s*?*(BEGIN|END|OFF|ON|CLEAR)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CORNER\\s*?*PARAM",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CYL\\s*?*ORI\\s*?*(LATERAL|PROFILE)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#CS\\s*?*((ADD|(DEF\\s*?*ACT)|DEF|(DEL\\s*?*ALL)|MODE\\s*?*(ON|OFF))|ON|(OFF\\s*?*ALL)|OFF|SELECT)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#CYL\\s*?(OFF|(\\[(-?(?:\\d+(?:\\.\\d*)?))\\])))|\\#CYL",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#DELETE",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#DEL\\s*?*DIST2GO",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#DISTANCE\\s*?*PROG\\s*?*START\\s*?*(ON|OFF|CLEAR)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#DRIVE\\s*?*(WR|WAIT)\\s*?*SYN",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#DYN_WEIGHT\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#DYNAMIC\\s*?*WEIGHT\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ECS\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#EDM\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#EDGE\\s*?*MACHINING\\s*?*(ON\\s*?*DEFAULT|ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#DISABLE|\\#ENABLE)\\s*?*AX\\s*?*LINK",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ERROR",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#EXPORT\\s*?*VE",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#EXPL\\s*?*SYN",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#FACE\\s*?(OFF|\\[(-?(?:\\d+(?:\\.\\d*)?))\\])|\\#FACE)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#FGROUP\\s*?*(ROT|WAXIS)|\\#FGROUP)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#FILE\\s*?*(NAME|EXIST|DELETE|RENAME)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#FILTER\\s*?*(ON|OFF)|\\#FILTER|\\s*?*\\[HSC\\])",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#FLUSH\\s*?*(CONTINUE|WAIT)|\\#FLUSH)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#FRC",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#FREE\\s*?*TOOL\\s*?*CHANGE\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#GET\\s*?*((CMDPOS|ACTPOS)|MANUAL\\s*?*OFFSETS|WCS\\s*?*POSLIMIT)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#HANDWHEEL",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#HSC\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#IDENT\\s*?*((WR|RD)\\s*?*SYN|(WR|RD))",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#INIT\\s*?*MACRO\\s*?*TAB",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#INIT\\s*?*V\\.E\\.",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#JOG\\s*?*(CONT|INCR)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#KIN\\s*?*ID",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#LOAD\\s*?*CONFIG",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#MACHINE\\s*?*DATA",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#MAIN\\s*?*SPINDLE",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#MANUAL\\s*?*LIMITS",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#MCS\\s*?*(ON\\s*?*EX\\s*?*TOOL|ON|OFF|TO\\s*?*WCS)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#MEAS\\s*?*(MODE|DEFAULT)|\\#MEAS)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#MICROJOINT",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#MSG\\s*?*(INFO|SAVE\\s*?*EXCLUSIVE|SAVE|(SYN\\s*?*ACK|SYN))|\\#MSG)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#NIBBLE\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#OPTIONAL\\s*?*EXECUTION\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#OTC\\s*?*(ON|OFF)|\\#OTC)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#OVERRIDE",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#PSET",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#PRESET",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#PTP\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#PUNCH\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#PUT\\s*?*(AX\\s*?*ALL|AX)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#RND",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ROTATION\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#RTCP\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#RT CYCLE(\\s*?*(DELETE|END))?",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#SAVE\\s*?*CONFIG",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#SCALE\\s*?*(ON|OFF)|\\#SCALE)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#SEGMENTATION\\s*?*(ON\\s*?*ALL|ON|OFF\\s*?*ALL|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#SET\\s*?*(SLOPE\\s*?*PROFIL|(AX\\s*?*LINK|AX))",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#SINGLE\\s*?*STEP|\\s*?*(\\[ENABLE\\]|\\[DISABLE\\]|\\[RESOLUTION\\s*?\\=\\s*?((-?(?:\\d+(?:\\.\\d*)?)))?\\])",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#SPLINE\\s*?*(ON|OFF|TYPE\\s*?*AKIMA|TYPE\\s*?*BSPLINE)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#SIGNAL\\s*?*(REMOVE|SYN)|\\#SIGNAL)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#SLOPE\\s*?*DEFAULT|\\#SLOPE)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#SUPPRESS\\s*?*OFFSETS",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#STROKE\\s*?*DEF\\s*?*(BEGIN|END)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TANGFEED",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TIMER",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TIME",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TLC\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TOOL\\s*?*(DATA|LIFE\\s*?*READ|LIFE\\s*?*REMOVE|ORI\\s*?*CS|PREP|REFRESH)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TRACK\\s*?*CS\\s*?*(ON|OFF|ABS)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#TRAFO\\s*?*(ON|OFF)|\\#TRAFO)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TRANSVELMIN\\s*?*(ON|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#TRC",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#VAR",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ENDVAR",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#VECTOR\\s*?*LIMIT\\s*?*(ON\\s*?*ALL|ON|OFF\\s*?*ALL|OFF)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#VOLCOMP\\s*?*(ON|OFF)|\\#VOLCOMP)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "(\\#WAIT\\s*?*(FOR|INDP\\s*?*ALL|INDP|SYN)|\\#WAIT)",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#WCS\\s*?*TO\\s*?*MCS",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#INFO",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#IF",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ELSE",
                    "name": "keyword.command.hashtag"
                },
                {
                    "match": "\\#ENDIF",
                    "name": "keyword.command.hashtag"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "match": "(\\+)|(\\-)|(\\*)|(\\/)|(\\*\\*)|(\\sMOD[^a-zA-Z]\\s*?*)",
                    "name": "keyword.operator"
                },
                {
                    "match": "(ABS)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(SQR)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(SQRT)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(EXP)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(LN)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(DEXP)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(LOG)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]",
                    "name": "keyword.operator"
                },
                {
                    "match": "(\\&)|(\\|)|(\\^)|(INV)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]",
                    "name": "keyword.operator"
                },
                {
                    "match": "(\\&\\&)|(\\|\\|)|(XOR)|(NOT)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]",
                    "name": "keyword.operator"
                },
                {
                    "match": "(SIN)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(COS)\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(TAN)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(COT)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(ASIN)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(ACOS)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(ATAN)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(ATAN2)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(ACOT)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]",
                    "name": "keyword.operator"
                },
                {
                    "match": "(INT)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(FRACT)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(CEIL)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(ROUND)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]|(FLOOR)\\s*?*\\[(-?(?:\\d+(?:\\.\\d*)?))\\]",
                    "name": "keyword.operator"
                },
                {
                    "match": "(==)|(!=)|(>=)|(<=)|(<)|(>)",
                    "name": "keyword.operator"
                },
                {
                    "match": "(TRUE)|(FALSE)",
                    "name": "keyword.operator"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "match": "(\\bPI\\b)",
                    "name": "constant.other"
                }
            ]
        },
        "speedsfeeds": {
            "patterns": [
                {
                    "match": "\\b(@?[Ss])((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "keywords.other.technology"
                },
                {
                    "match": "\\b[Ff]((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "keywords.other.technology"
                },
                {
                    "match": "\\b[Ee]((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "keywords.other.technology"
                },
                {
                    "match": "\\b[Hh]((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "keywords.other.technology"
                }
            ]
        },
        "prognames": {
            "patterns": [
                {
                    "match": "^%(-?(?:\\d+(?:\\.\\d*)?))\n",
                    "name": "storage.type.programnumber"
                },
                {
                    "match": "^[Oo](-?(?:\\d+(?:\\.\\d*)?))\n",
                    "name": "storage.type.programnumber"
                }
            ]
        },
        "common": {
            "patterns": [
                {
                    "match": "\\b[Nn][0-9]+",
                    "name": "storage.type.blocknumber"
                }
            ]
        },
        "coords": {
            "patterns": [
                {
                    "match": "\\b(@?[XYZABCUVW])((?=P[0-9]+)|(?=V\\.)|([-+]?(?:\\d+(?:\\.\\d*)?))|(?=\\[.+\\]))",
                    "name": "constant.numeric"
                }
            ]
        },
        "tools": {
            "patterns": [
                {
                    "match": "\\b[Dd]((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "keyword.tool"
                },
                {
                    "match": "\\b[Hh]((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "keyword.tool"
                },
                {
                    "match": "\\b[Tt]((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "keyword.tool"
                }
            ]
        },
        "modifiers": {
            "patterns": [
                {
                    "match": "\\b(@?[Ii])((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "constant.numeric"
                },
                {
                    "match": "\\b(@?[Jj])((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "constant.numeric"
                },
                {
                    "match": "\\b(@?[Kk])((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "constant.numeric"
                },
                {
                    "match": "\\b(@?[Rr])((?=P[0-9]+)|(?=V\\.)|(-?(?:\\d+(?:\\.\\d*)?)))",
                    "name": "constant.numeric"
                }
            ]
        },
        "labels": {
            "patterns": [
                {
                    "match": "(\\s?)N[0-9]*:{1}(\\s?)|\\[.*\\]:{1}",
                    "name": "keyword.operator"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "match": "V\\.A\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.SPDL\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.G\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.P\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.S\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.L\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.E\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.TOOL\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.TLM\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "V\\.CYC\\.[.a-zA-Z0-9_]+",
                    "name": "variable.parameter"
                },
                {
                    "match": "[Pp][0-9]+",
                    "name": "variable.parameter"
                }
            ]
        },
        "programcalls": {
            "patterns": [
                {
                    "match": "\\bL\\s*?*CYCLE",
                    "name": "keyword.control.call"
                },
                {
                    "match": "\\bLL\\s*?*CYCLE",
                    "name": "keyword.control.call"
                },
                {
                    "match": "\\bL\\s*?*SEQUENCE",
                    "name": "keyword.control.call"
                },
                {
                    "match": "\\b[Ll]{1,2}\\b",
                    "name": "keyword.control.call"
                },
                {
                    "match": "\\b\\\\b",
                    "name": "keyword.control.call"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "match": "\".*\"",
                    "name": "string.quoted.double"
                }
            ]
        }
    }
}